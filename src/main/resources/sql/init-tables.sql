-- Oracle Database 테이블 생성 스크립트
-- SC_PT 스키마에 푸시 관련 테이블들을 생성

-- 1. 푸시 메시지 마스터 테이블
CREATE TABLE SC_HAPP.PUSH_MSG_MASTER (
    SEQ NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SYS_TYPE_CODE VARCHAR2(50),
    APP_ID VARCHAR2(100),
    TITLE VARCHAR2(200),
    SUBTITLE VARCHAR2(200),
    MSG_BODY VARCHAR2(4000),
    RSV_YN CHAR(1) DEFAULT 'N',
    RSV_DTM VARCHAR2(14),
    PRTY NUMBER,
    PRC_FLAG CHAR(1) DEFAULT 'P',
    REG_DTM VARCHAR2(14),
    RGST_ID VARCHAR2(50)
);

-- 2. 푸시 발송 대상 정보 테이블
CREATE TABLE SC_HAPP.PUSH_SEND_TARGET_INFO (
    SEQ NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PUSH_MSG_SEQ NUMBER,
    TARGET_EMPID VARCHAR2(50),
    REG_DTM VARCHAR2(14),
    RGST_ID VARCHAR2(50)
);

-- 3. 푸시 발송 대기 테이블
CREATE TABLE SC_HAPP.PUSH_SEND_STBY (
    SEQ NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PUSH_MSG_SEQ NUMBER,
    TARGET_EMPID VARCHAR2(50),
    PUSH_SVR_TYPE VARCHAR2(20),
    PRC_FLAG CHAR(1) DEFAULT 'P',
    REG_DTM VARCHAR2(14),
    RGST_ID VARCHAR2(50)
);

-- 4. 사용자 디바이스 정보 테이블
CREATE TABLE SC_HAPP.USER_DEVICE_INFO (
    EMP_ID VARCHAR2(50) NOT NULL,
    DEVICE_TOKEN VARCHAR2(500) NOT NULL,
    OS_TYPE VARCHAR2(20),
    USE_YN CHAR(1) DEFAULT 'Y',
    REG_DTM VARCHAR2(14),
    REG_ID VARCHAR2(50),
    UPD_DTM VARCHAR2(14),
    UPD_ID VARCHAR2(50),
    CONSTRAINT PK_USER_DEVICE_INFO PRIMARY KEY (EMP_ID, DEVICE_TOKEN)
);

-- 5. 푸시 발송 성공 결과 테이블
CREATE TABLE SC_HAPP.PUSH_SUCCESS_RESULT (
    SEQ NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PUSH_SEND_STBY_SEQ NUMBER,
    PUSH_MSG_SEQ NUMBER,
    DEVICE_TOKEN VARCHAR2(1000),
    EMP_ID VARCHAR2(50),
    APP_ID VARCHAR2(100),
    PUSH_SVR_TYPE VARCHAR2(20),
    SEND_STATUS_CODE CHAR(1),
    SENT_DTM VARCHAR2(14),
    RCV_DTM VARCHAR2(14),
    READ_DTM VARCHAR2(14),
    REG_DTM VARCHAR2(14),
    RGST_ID VARCHAR2(50)
);

-- 6. 푸시 발송 실패 결과 테이블
CREATE TABLE SC_HAPP.PUSH_FAIL_RESULT (
    SEQ NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PUSH_SEND_STBY_SEQ NUMBER,
    PUSH_MSG_SEQ NUMBER,
    DEVICE_TOKEN VARCHAR2(1000),
    EMP_ID VARCHAR2(50),
    APP_ID VARCHAR2(100),
    PUSH_SVR_TYPE VARCHAR2(20),
    PUSH_SVR_RST_CODE VARCHAR2(50),
    PUSH_SVR_RST_MSG VARCHAR2(200),
    REG_DTM VARCHAR2(14),
    RGST_ID VARCHAR2(50)
);

-- 인덱스 생성
CREATE INDEX IDX_PUSH_MSG_MASTER_PRC_FLAG ON SC_HAPP.PUSH_MSG_MASTER(PRC_FLAG, RSV_YN);
CREATE INDEX IDX_PUSH_SEND_TARGET_MSG_SEQ ON SC_HAPP.PUSH_SEND_TARGET_INFO(PUSH_MSG_SEQ);
CREATE INDEX IDX_PUSH_SEND_STBY_PRC_FLAG ON SC_HAPP.PUSH_SEND_STBY(PRC_FLAG);
CREATE INDEX IDX_USER_DEVICE_EMP_ID ON SC_HAPP.USER_DEVICE_INFO(EMP_ID, USE_YN);

-- 테스트 데이터 삽입 (선택사항)
-- INSERT INTO SC_PT.PUSH_MSG_MASTER (SYS_TYPE_CODE, APP_ID, TITLE, SUBTITLE, MSG_BODY, RSV_YN, PRTY, PRC_FLAG, REG_DTM, RGST_ID)
-- VALUES ('TEST', 'com.hyundai.app', '테스트 제목', '테스트 부제목', '테스트 메시지 내용입니다.', 'N', 1, 'P', '20241201120000', 'admin');

-- INSERT INTO SC_PT.USER_DEVICE_INFO (EMP_ID, DEVICE_TOKEN, OS_TYPE, USE_YN, REG_DTM, REG_ID)
-- VALUES ('TEST001', 'test-device-token-android', 'AOS', 'Y', '20241201120000', 'admin');

COMMIT; 